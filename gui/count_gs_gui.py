#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.5 on Mon Oct  6 13:14:00 2008 from /home/smagala/tasks/count_gs/gui/count_gs_gui.wxg

# Copyright (C) 2008 James Smagala

# Contact:
#   James Smagala
#   smagala@gmail.com

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

import wx

class GUIMainFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: GUIMainFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.panel_1 = wx.Panel(self, -1)
        
        # Menu Bar
        self.main_frame_menubar = wx.MenuBar()
        self.SetMenuBar(self.main_frame_menubar)
        self.file_menu = wx.Menu()
        self.file_menu.AppendSeparator()
        self.exit_menu_option = wx.MenuItem(self.file_menu, wx.NewId(), "Exit", "Quit the application", wx.ITEM_NORMAL)
        self.file_menu.AppendItem(self.exit_menu_option)
        self.main_frame_menubar.Append(self.file_menu, "File")
        # Menu Bar end
        self.main_frame_statusbar = self.CreateStatusBar(1, 0)
        self.label_1 = wx.StaticText(self.panel_1, -1, "nt Alignment File:")
        self.file_box = wx.TextCtrl(self.panel_1, -1, "", style=wx.TE_READONLY)
        self.select_button = wx.Button(self.panel_1, -1, "Select")
        self.table_button = wx.Button(self.panel_1, -1, "Generate Glycosylation Table")
        self.fasta_button = wx.Button(self.panel_1, -1, "Generate Labeled FASTA")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_MENU, self.on_exit, self.exit_menu_option)
        self.Bind(wx.EVT_BUTTON, self.on_select_alignment, self.select_button)
        self.Bind(wx.EVT_BUTTON, self.on_generate_table, self.table_button)
        self.Bind(wx.EVT_BUTTON, self.on_generate_fasta, self.fasta_button)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: GUIMainFrame.__set_properties
        self.SetTitle("Glycosylation Site Calculator")
        self.main_frame_statusbar.SetStatusWidths([-1])
        # statusbar fields
        main_frame_statusbar_fields = [""]
        for i in range(len(main_frame_statusbar_fields)):
            self.main_frame_statusbar.SetStatusText(main_frame_statusbar_fields[i], i)
        self.file_box.SetMinSize((250, 27))
        self.table_button.Enable(False)
        self.fasta_button.Enable(False)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: GUIMainFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(1, 2, 0, 5)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_3.Add(self.label_1, 0, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_4.Add(self.file_box, 0, wx.EXPAND, 0)
        sizer_3.Add(sizer_4, 1, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_3.Add(self.select_button, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_2.Add(sizer_3, 0, wx.ALL|wx.EXPAND, 5)
        grid_sizer_1.Add(self.table_button, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.fasta_button, 0, wx.EXPAND, 0)
        sizer_2.Add(grid_sizer_1, 0, wx.LEFT|wx.RIGHT|wx.ALIGN_CENTER_HORIZONTAL, 5)
        self.panel_1.SetSizer(sizer_2)
        sizer_1.Add(self.panel_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade

    def on_exit(self, event): # wxGlade: GUIMainFrame.<event_handler>
        print "Event handler `on_exit' not implemented!"
        event.Skip()

    def on_select_alignment(self, event): # wxGlade: GUIMainFrame.<event_handler>
        print "Event handler `on_select_alignment' not implemented!"
        event.Skip()

    def on_generate_table(self, event): # wxGlade: GUIMainFrame.<event_handler>
        print "Event handler `on_generate_table' not implemented!"
        event.Skip()

    def on_generate_fasta(self, event): # wxGlade: GUIMainFrame.<event_handler>
        print "Event handler `on_generate_fasta' not implemented!"
        event.Skip()

# end of class GUIMainFrame


class GUIApp(wx.App):
    def OnInit(self):
        wx.InitAllImageHandlers()
        main_frame = GUIMainFrame(None, -1, "")
        self.SetTopWindow(main_frame)
        main_frame.Show()
        return 1

# end of class GUIApp

if __name__ == "__main__":
    app = GUIApp(0)
    app.MainLoop()
